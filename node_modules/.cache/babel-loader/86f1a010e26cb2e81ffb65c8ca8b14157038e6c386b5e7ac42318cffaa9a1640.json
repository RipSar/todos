{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RipSar\\\\WebstormProjects\\\\todo\\\\src\\\\pages\\\\TodoList\\\\components\\\\AllItems\\\\index.tsx\";\nimport React from \"react\";\nimport './styles.scss';\nimport ItemElement from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const FILTER_NAMES = {\n//     all: \"all\",\n//     completed: \"completed\",\n// }\n//\n// const FILTERS = {\n//     [FILTER_NAMES.all]: {\n//         label: \"All\",\n//         filterFunk: () => true,\n//     },\n//     [FILTER_NAMES.completed]: {\n//         label: \"Completed\",\n//         filterFunk: (todo) => todo.isCompleted,\n//     },\n//     [FILTER_NAMES.saga]: {\n//         label: \"Completed\",\n//         filterFunk: (todo) => todo.task === \"saga\",\n//     }\n// }\n// Object.values(FILTERS).map(filter => (\n//     <button onClick={() => setFilter(filter)}>\n//         {filter.label}\n//     </button>\n// ))\nconst AllItems = _ref => {\n  let {\n    todos,\n    onTodoDelete,\n    onToggleItemCompleteState,\n    onTodoEditStart,\n    onTodoEditSubmit,\n    onTodoEditCancel,\n    editingItemId\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"all_todos\",\n    children: todos\n    // .filter(item => filter === null || item.isCompleted === filter)\n    .map(item => /*#__PURE__*/_jsxDEV(ItemElement, {\n      item: item,\n      onTodoDelete: onTodoDelete,\n      onToggleItemCompleteState: onToggleItemCompleteState,\n      onTodoEditStart: onTodoEditStart,\n      onTodoEditSubmit: onTodoEditSubmit,\n      onTodoEditCancel: onTodoEditCancel,\n      editingItemId: editingItemId\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c = AllItems;\nexport default AllItems;\nvar _c;\n$RefreshReg$(_c, \"AllItems\");","map":{"version":3,"names":["React","ItemElement","jsxDEV","_jsxDEV","AllItems","_ref","todos","onTodoDelete","onToggleItemCompleteState","onTodoEditStart","onTodoEditSubmit","onTodoEditCancel","editingItemId","className","children","map","item","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/pages/TodoList/components/AllItems/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {Item} from \"../../../../slices/counterSlice\";\r\nimport './styles.scss'\r\nimport ItemElement from \"./components\";\r\n\r\n\r\nexport interface IRemoveTodoTask {\r\n    onTodoDelete: (id: string) => void\r\n    onToggleItemCompleteState: (id: string) => void\r\n    onTodoEditStart: (id: string) => void\r\n    onTodoEditSubmit: (id: string, value: string) => void\r\n    onTodoEditCancel: () => void\r\n    editingItemId: string|null\r\n}\r\n\r\ninterface IAllItemsProps extends IRemoveTodoTask {\r\n    todos: Item[];\r\n}\r\n\r\n// const FILTER_NAMES = {\r\n//     all: \"all\",\r\n//     completed: \"completed\",\r\n// }\r\n//\r\n// const FILTERS = {\r\n//     [FILTER_NAMES.all]: {\r\n//         label: \"All\",\r\n//         filterFunk: () => true,\r\n//     },\r\n//     [FILTER_NAMES.completed]: {\r\n//         label: \"Completed\",\r\n//         filterFunk: (todo) => todo.isCompleted,\r\n//     },\r\n//     [FILTER_NAMES.saga]: {\r\n//         label: \"Completed\",\r\n//         filterFunk: (todo) => todo.task === \"saga\",\r\n//     }\r\n// }\r\n// Object.values(FILTERS).map(filter => (\r\n//     <button onClick={() => setFilter(filter)}>\r\n//         {filter.label}\r\n//     </button>\r\n// ))\r\nconst AllItems = ({\r\n                      todos,\r\n                      onTodoDelete,\r\n                      onToggleItemCompleteState,\r\n                      onTodoEditStart,\r\n                      onTodoEditSubmit,\r\n                      onTodoEditCancel,\r\n                      editingItemId,\r\n                  }: IAllItemsProps) => {\r\n    return (\r\n        <ul className='all_todos'>\r\n            {todos\r\n                // .filter(item => filter === null || item.isCompleted === filter)\r\n                .map(item => (\r\n                    <ItemElement\r\n                        key={item.id}\r\n                        item={item}\r\n                        onTodoDelete={onTodoDelete}\r\n                        onToggleItemCompleteState={onToggleItemCompleteState}\r\n                        onTodoEditStart={onTodoEditStart}\r\n                        onTodoEditSubmit={onTodoEditSubmit}\r\n                        onTodoEditCancel={onTodoEditCancel}\r\n                        editingItemId={editingItemId}\r\n                    />\r\n                ))}\r\n        </ul>\r\n    );\r\n};\r\nexport default AllItems\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAe;AACtB,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAGC,IAAA,IAQuB;EAAA,IARtB;IACIC,KAAK;IACLC,YAAY;IACZC,yBAAyB;IACzBC,eAAe;IACfC,gBAAgB;IAChBC,gBAAgB;IAChBC;EACY,CAAC,GAAAP,IAAA;EAC/B,oBACIF,OAAA;IAAIU,SAAS,EAAC,WAAW;IAAAC,QAAA,EACpBR;IACG;IAAA,CACCS,GAAG,CAACC,IAAI,iBACLb,OAAA,CAACF,WAAW;MAERe,IAAI,EAAEA,IAAK;MACXT,YAAY,EAAEA,YAAa;MAC3BC,yBAAyB,EAAEA,yBAA0B;MACrDC,eAAe,EAAEA,eAAgB;MACjCC,gBAAgB,EAAEA,gBAAiB;MACnCC,gBAAgB,EAAEA,gBAAiB;MACnCC,aAAa,EAAEA;IAAc,GAPxBI,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQf,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb,CAAC;AAACC,EAAA,GA3BIlB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}