{"ast":null,"code":"import { ActionType } from './actions';\nconst initialState = {\n  items: null\n};\nexport function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ActionType.AddItem:\n      return {\n        items: initialState.items\n      };\n    case ActionType.RemoveItem:\n      return {\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["ActionType","initialState","items","reducer","state","arguments","length","undefined","action","type","AddItem","RemoveItem","count"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/state/reducer.ts"],"sourcesContent":["import { AppState } from './types'\r\nimport { Action, ActionType } from './actions';\r\n\r\nconst initialState: AppState = {\r\n    items: null,\r\n};\r\n\r\nexport function reducer(state = initialState, action: Action): AppState {\r\n    switch (action.type) {\r\n        case ActionType.AddItem:\r\n            return { items: initialState.items };\r\n        case ActionType.RemoveItem:\r\n            return { count: state.count - 1 };\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AACA,SAAiBA,UAAU,QAAQ,WAAW;AAE9C,MAAMC,YAAsB,GAAG;EAC3BC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,SAASC,OAAOA,CAAA,EAAiD;EAAA,IAAhDC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAc,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKT,UAAU,CAACU,OAAO;MACnB,OAAO;QAAER,KAAK,EAAED,YAAY,CAACC;MAAM,CAAC;IACxC,KAAKF,UAAU,CAACW,UAAU;MACtB,OAAO;QAAEC,KAAK,EAAER,KAAK,CAACQ,KAAK,GAAG;MAAE,CAAC;IACrC;MACI,OAAOR,KAAK;EACpB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}