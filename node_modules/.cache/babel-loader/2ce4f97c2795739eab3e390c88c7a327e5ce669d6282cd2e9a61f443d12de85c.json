{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  value: 0,\n  test: \"trttttt\"\n};\nconst counterSlice = createSlice({\n  name: \"tutorial\",\n  initialState,\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes.\n      // Also, no return statement is required from these functions.\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\nconst {\n  reducer\n} = counterSlice;\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default reducer;","map":{"version":3,"names":["createSlice","initialState","value","test","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","reducer","actions"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/slices/counterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = {\r\n    value: 0,\r\n    test: \"trttttt\"\r\n}\r\n\r\n\r\nconst counterSlice = createSlice({\r\n    name: \"tutorial\",\r\n    initialState,\r\n    reducers: {\r\n        increment: (state) => {\r\n            // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n            // doesn't actually mutate the state because it uses the Immer library,\r\n            // which detects changes to a \"draft state\" and produces a brand new\r\n            // immutable state based off those changes.\r\n            // Also, no return statement is required from these functions.\r\n            state.value += 1\r\n        },\r\n        decrement: (state) => {\r\n            state.value -= 1\r\n        },\r\n        incrementByAmount: (state, action) => {\r\n            state.value += action.payload\r\n        },\r\n    },\r\n\r\n});\r\n\r\nconst { reducer } = counterSlice;\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE;AACV,CAAC;AAGD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,UAAU;EAChBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,SAAS,EAAGC,KAAK,IAAK;MAClB;MACA;MACA;MACA;MACA;MACAA,KAAK,CAACN,KAAK,IAAI,CAAC;IACpB,CAAC;IACDO,SAAS,EAAGD,KAAK,IAAK;MAClBA,KAAK,CAACN,KAAK,IAAI,CAAC;IACpB,CAAC;IACDQ,iBAAiB,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAClCH,KAAK,CAACN,KAAK,IAAIS,MAAM,CAACC,OAAO;IACjC;EACJ;AAEJ,CAAC,CAAC;AAEF,MAAM;EAAEC;AAAQ,CAAC,GAAGT,YAAY;AAEhC,OAAO,MAAM;EAAEG,SAAS;EAAEE,SAAS;EAAEC;AAAkB,CAAC,GAAGN,YAAY,CAACU,OAAO;AAC/E,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}