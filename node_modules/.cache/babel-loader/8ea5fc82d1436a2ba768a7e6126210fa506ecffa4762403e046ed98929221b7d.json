{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RipSar\\\\WebstormProjects\\\\todo\\\\src\\\\pages\\\\TodoList\\\\components\\\\InputToDo\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.scss';\n\n// @ts-ignore\n\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputToDo(_ref) {\n  _s();\n  let {\n    isAllCompleted,\n    handleTodoToggle,\n    toggleItems,\n    handleTodoCreate\n  } = _ref;\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleCreateItem = e => {\n    if (e.key === 'Enter') {\n      if (inputValue.trim() !== '') {\n        handleTodoCreate(inputValue);\n        setInputValue('');\n      }\n    }\n  };\n  const handleInputValue = e => {\n    setInputValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `items-toggle-all ${handleTodoToggle ? '' : 'checked'}`,\n      onClick: toggleItems,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: handleTodoToggle ? {} : {\n          opacity: 0\n        },\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"items-input\",\n      placeholder: \"What needs to be done?\",\n      onKeyDown: handleCreateItem,\n      value: inputValue,\n      onChange: handleInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(InputToDo, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n_c = InputToDo;\nexport default InputToDo;\nvar _c;\n$RefreshReg$(_c, \"InputToDo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputToDo","_ref","_s","isAllCompleted","handleTodoToggle","toggleItems","handleTodoCreate","inputValue","setInputValue","handleCreateItem","e","key","trim","handleInputValue","target","value","className","children","onClick","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onKeyDown","onChange","_c","$RefreshReg$"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/pages/TodoList/components/InputToDo/index.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './styles.scss'\r\n\r\n// @ts-ignore\r\n\r\n//\r\n\r\ninterface ToDoInputName {\r\n    isAllCompleted: boolean;\r\n    handleTodoToggle: boolean;\r\n    toggleItems: () => void;\r\n    handleTodoCreate: (value: string) => void;\r\n}\r\n\r\nfunction InputToDo({\r\n                       isAllCompleted, handleTodoToggle, toggleItems,\r\n                       handleTodoCreate\r\n                   }: ToDoInputName) {\r\n\r\n    const [inputValue, setInputValue] = useState<string>(\"\")\r\n\r\n    const handleCreateItem = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n            if (inputValue.trim() !== '') {\r\n                handleTodoCreate(inputValue)\r\n                setInputValue('')\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='items'>\r\n\r\n            <button\r\n                className={`items-toggle-all ${handleTodoToggle ? '' : 'checked'}`}\r\n                onClick={toggleItems}\r\n            >\r\n                <span\r\n                    style={handleTodoToggle ? {} : {opacity: 0}}\r\n                >\r\n                    â€º\r\n                </span>\r\n            </button>\r\n            <input\r\n                type='text'\r\n                className='items-input'\r\n                placeholder='What needs to be done?'\r\n                onKeyDown={handleCreateItem}\r\n                value={inputValue}\r\n                onChange={handleInputValue}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputToDo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,eAAe;;AAEtB;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA,SAASC,SAASA,CAAAC,IAAA,EAGmB;EAAAC,EAAA;EAAA,IAHlB;IACIC,cAAc;IAAEC,gBAAgB;IAAEC,WAAW;IAC7CC;EACW,CAAC,GAAAL,IAAA;EAE/B,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAExD,MAAMY,gBAAgB,GAAIC,CAAsC,IAAK;IACjE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnB,IAAIJ,UAAU,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC1BN,gBAAgB,CAACC,UAAU,CAAC;QAC5BC,aAAa,CAAC,EAAE,CAAC;MACrB;IACJ;EACJ,CAAC;EAED,MAAMK,gBAAgB,GAAIH,CAAsC,IAAK;IACjEF,aAAa,CAACE,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAElBlB,OAAA;MACIiB,SAAS,EAAG,oBAAmBZ,gBAAgB,GAAG,EAAE,GAAG,SAAU,EAAE;MACnEc,OAAO,EAAEb,WAAY;MAAAY,QAAA,eAErBlB,OAAA;QACIoB,KAAK,EAAEf,gBAAgB,GAAG,CAAC,CAAC,GAAG;UAACgB,OAAO,EAAE;QAAC,CAAE;QAAAH,QAAA,EAC/C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACTzB,OAAA;MACI0B,IAAI,EAAC,MAAM;MACXT,SAAS,EAAC,aAAa;MACvBU,WAAW,EAAC,wBAAwB;MACpCC,SAAS,EAAElB,gBAAiB;MAC5BM,KAAK,EAAER,UAAW;MAClBqB,QAAQ,EAAEf;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CA3CQF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}