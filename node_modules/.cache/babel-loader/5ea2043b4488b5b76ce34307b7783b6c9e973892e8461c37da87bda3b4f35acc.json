{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RipSar\\\\WebstormProjects\\\\todo\\\\src\\\\pages\\\\TodoList\\\\components\\\\AllItems\\\\components\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemElement = _ref => {\n  _s();\n  let {\n    item,\n    deleteItem,\n    onToggleItemCompleteState,\n    onIdEditingItem,\n    changeItem,\n    editingItemId\n  } = _ref;\n  const [inputValue, setInputValue] = useState(item.value);\n  const isItemEditing = item.id === editingItemId;\n  useEffect(() => {\n    setInputValue(item.value);\n  }, [isItemEditing, item.value]);\n  const handleKeyDown = e => {\n    if (e.code === \"Enter\") {\n      if (inputValue.trim() !== '') {\n        handleItemEditSubmit();\n      }\n    } else if (e.code === \"Escape\") {\n      handleItemEditCancel();\n    }\n  };\n  const handleBlur = () => {\n    if (inputValue.trim() !== '') {\n      handleItemEditSubmit();\n    }\n  };\n  const handleItemDelete = () => {\n    deleteItem(item.id);\n  };\n  const handleToggleItemCompleteState = () => {\n    !item.isEditing && onToggleItemCompleteState(item.id);\n  };\n  const handleItemEditStart = () => onIdEditingItem(item.id);\n  const handleItemEditSubmit = () => {\n    changeItem(item.id, inputValue);\n    onIdEditingItem(null);\n  };\n  const handleItemEditCancel = () => onIdEditingItem(null);\n\n  // handleInputValueChange\n  const controlInputValue = e => {\n    setInputValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo-item\",\n    onDoubleClick: handleItemEditStart,\n    children: item.id === editingItemId ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"taskArea\",\n      onKeyDown: handleKeyDown,\n      value: inputValue,\n      onChange: controlInputValue,\n      onBlur: handleBlur,\n      autoFocus: true\n    }, \"input-edit\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"labelDone3\" + item.id,\n        type: \"checkbox\",\n        className: \"input-for-todo-list\",\n        checked: item.isCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"labelDone3\" + item.id,\n        className: \"label-for-todo-list\",\n        onClick: handleToggleItemCompleteState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"deleteTaskButton\",\n        onClick: handleItemDelete,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(ItemElement, \"2mhdKu/+dQ6RR9DhABp+RcO1sq4=\");\n_c = ItemElement;\nexport default ItemElement;\nvar _c;\n$RefreshReg$(_c, \"ItemElement\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemElement","_ref","_s","item","deleteItem","onToggleItemCompleteState","onIdEditingItem","changeItem","editingItemId","inputValue","setInputValue","value","isItemEditing","id","handleKeyDown","e","code","trim","handleItemEditSubmit","handleItemEditCancel","handleBlur","handleItemDelete","handleToggleItemCompleteState","isEditing","handleItemEditStart","controlInputValue","target","className","onDoubleClick","children","type","onKeyDown","onChange","onBlur","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","checked","isCompleted","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/pages/TodoList/components/AllItems/components/index.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Item} from \"../../../../../slices/counterSlice\";\r\nimport {IRemoveTodoTask} from \"../index\";\r\n\r\n\r\ninterface IItem extends IRemoveTodoTask {\r\n    item: Item;\r\n}\r\n\r\nconst ItemElement = ({ item, deleteItem, onToggleItemCompleteState, onIdEditingItem,\r\n                         changeItem, editingItemId }: IItem) => {\r\n\r\n    const [inputValue, setInputValue] = useState<string>(item.value)\r\n\r\n    const isItemEditing = item.id === editingItemId\r\n\r\n    useEffect(() => {\r\n        setInputValue(item.value)\r\n    }, [isItemEditing, item.value])\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.code === \"Enter\") {\r\n            if (inputValue.trim() !== '') {\r\n                handleItemEditSubmit()\r\n            }\r\n        } else if (e.code === \"Escape\") {\r\n            handleItemEditCancel()\r\n        }\r\n    }\r\n\r\n    const handleBlur = () => {\r\n        if (inputValue.trim() !== '') {\r\n            handleItemEditSubmit()\r\n        }\r\n    }\r\n\r\n    const handleItemDelete = () => {\r\n        deleteItem(item.id)\r\n    }\r\n\r\n    const handleToggleItemCompleteState = () => {\r\n        !item.isEditing && onToggleItemCompleteState(item.id)\r\n    }\r\n\r\n    const handleItemEditStart = () => onIdEditingItem(item.id)\r\n\r\n    const handleItemEditSubmit = () => {\r\n        changeItem(item.id, inputValue)\r\n        onIdEditingItem(null)\r\n    }\r\n    const handleItemEditCancel = () => onIdEditingItem(null)\r\n\r\n    // handleInputValueChange\r\n    const controlInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <li className=\"todo-item\" onDoubleClick={handleItemEditStart}>\r\n\r\n            {item.id === editingItemId ? (\r\n                <input\r\n                    key={\"input-edit\"}\r\n                    type=\"text\"\r\n                    className=\"taskArea\"\r\n                    onKeyDown={handleKeyDown}\r\n                    value={inputValue}\r\n                    onChange={controlInputValue}\r\n                    onBlur={handleBlur}\r\n                    autoFocus={true}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <input id={\"labelDone3\" + item.id}\r\n                           type=\"checkbox\"\r\n                           className=\"input-for-todo-list\"\r\n                           checked={item.isCompleted}\r\n                    />\r\n                    <label htmlFor={\"labelDone3\" + item.id}\r\n                           className=\"label-for-todo-list\"\r\n                           onClick={handleToggleItemCompleteState}\r\n                    />\r\n                    <p>\r\n                        {item.value}\r\n                    </p>\r\n                    <button type=\"button\" className=\"deleteTaskButton\" onClick={handleItemDelete}>\r\n                        Ã—\r\n                    </button>\r\n                </>\r\n\r\n            )}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ItemElement"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}