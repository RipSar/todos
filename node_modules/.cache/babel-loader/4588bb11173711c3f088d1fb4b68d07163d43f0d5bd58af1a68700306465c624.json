{"ast":null,"code":"// import { createStore } from 'redux';\n// import { reducer } from './reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport todos from \"../slices/counterSlice\";\nexport const store = configureStore({\n  reducer: {\n    counter: todos\n  },\n  devTools: true\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","todos","store","reducer","counter","devTools"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/state/store.ts"],"sourcesContent":["// import { createStore } from 'redux';\r\n// import { reducer } from './reducer';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport todos from \"../slices/counterSlice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: todos\r\n    },\r\n    devTools: true,\r\n});\r\n\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA;AACA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,wBAAwB;AAE1C,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAChCG,OAAO,EAAE;IACLC,OAAO,EAAEH;EACb,CAAC;EACDI,QAAQ,EAAE;AACd,CAAC,CAAC;;AAGF;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}