{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RipSar\\\\WebstormProjects\\\\todo\\\\src\\\\components\\\\AllItems\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemElement = _ref => {\n  _s();\n  let {\n    item,\n    destroyItem,\n    checkItem,\n    toggleEditProp,\n    changeItem\n  } = _ref;\n  const inputRef = useRef(null);\n  const [inputValue, setInputValue] = useState(item.value);\n  const handleKeyDown = e => {\n    console.log(e.key);\n    if (e.code === \"Enter\") {\n      if (inputValue.trim() !== '') {\n        changeItem(item.id, inputValue);\n        editItem();\n      }\n    } else if (e.code === \"Escape\") {\n      // handleTodoEditCancel(todo.id);\n    }\n  };\n  const handleItemDelete = () => {\n    destroyItem(item.id);\n  };\n  const toggleItem = () => {\n    !item.isEditing && checkItem(item.id);\n  };\n  const editItem = () => toggleEditProp(item.id);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"labelDone3\" + item.id,\n      type: \"checkbox\",\n      className: \"input-for-todo-list\",\n      checked: item.isEditing ? false : item.isCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"labelDone3\" + item.id,\n      className: \"label-for-todo-list\",\n      onClick: toggleItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), item.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      className: \"taskArea\",\n      onKeyDown: handleKeyDown,\n      value: inputValue,\n      onChange: e => {\n        setInputValue(e.target.value);\n      }\n      // onBlur={handleBlur}\n    }, \"input-edit\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onDoubleClick: editItem,\n        children: item.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"deleteTaskButton\",\n        onClick: handleItemDelete,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n// const FILTER_NAMES = {\n//     all: \"all\",\n//     completed: \"completed\",\n// }\n//\n// const FILTERS = {\n//     [FILTER_NAMES.all]: {\n//         label: \"All\",\n//         filterFunk: () => true,\n//     },\n//     [FILTER_NAMES.completed]: {\n//         label: \"Completed\",\n//         filterFunk: (todo) => todo.isCompleted,\n//     },\n//     [FILTER_NAMES.saga]: {\n//         label: \"Completed\",\n//         filterFunk: (todo) => todo.task === \"saga\",\n//     }\n// }\n// Object.values(FILTERS).map(filter => (\n//     <button onClick={() => setFilter(filter)}>\n//         {filter.label}\n//     </button>\n// ))\n_s(ItemElement, \"PEW+rSKpVf8scK6PvBR5wuOX/hg=\");\n_c = ItemElement;\nconst AllItems = _ref2 => {\n  let {\n    itemList,\n    destroyItem,\n    checkItem,\n    filter,\n    toggleEditProp,\n    changeItem\n  } = _ref2;\n  console.log(itemList, itemList.filter(item => filter === null || item.isCompleted === filter));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"all_todos\",\n    children: itemList.filter(item => filter === null || item.isCompleted === filter).map(item => /*#__PURE__*/_jsxDEV(ItemElement, {\n      item: item,\n      destroyItem: destroyItem,\n      checkItem: checkItem,\n      toggleEditProp: toggleEditProp,\n      changeItem: changeItem\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_c2 = AllItems;\nexport default AllItems;\nvar _c, _c2;\n$RefreshReg$(_c, \"ItemElement\");\n$RefreshReg$(_c2, \"AllItems\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemElement","_ref","_s","item","destroyItem","checkItem","toggleEditProp","changeItem","inputRef","inputValue","setInputValue","value","handleKeyDown","e","console","log","key","code","trim","id","editItem","handleItemDelete","toggleItem","isEditing","className","children","type","checked","isCompleted","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","ref","onKeyDown","onChange","target","onDoubleClick","_c","AllItems","_ref2","itemList","filter","map","_c2","$RefreshReg$"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/components/AllItems/index.tsx"],"sourcesContent":["import React, {useRef, useState} from \"react\";\r\nimport {Item} from \"../../slices/counterSlice\";\r\nimport './styles.scss'\r\n\r\ninterface IRemoveTodoTask {\r\n    destroyItem: (id: string) => void\r\n    checkItem: (id: string) => void\r\n    toggleEditProp: (id: string) => void\r\n    changeItem: (id: string, value: string) => void\r\n}\r\n\r\ninterface IAllItemsProps extends IRemoveTodoTask {\r\n    itemList: Item[];\r\n    filter: boolean | null\r\n}\r\n\r\ninterface IItem extends IRemoveTodoTask {\r\n    item: Item;\r\n\r\n}\r\n\r\nconst ItemElement = ({item, destroyItem, checkItem, toggleEditProp, changeItem}: IItem) => {\r\n\r\n    const inputRef = useRef(null)\r\n    const [inputValue, setInputValue] = useState<string>(item.value)\r\n\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        console.log(e.key)\r\n        if (e.code === \"Enter\") {\r\n            if (inputValue.trim() !== '') {\r\n                changeItem(item.id, inputValue)\r\n                editItem()\r\n            }\r\n        } else if (e.code === \"Escape\") {\r\n            // handleTodoEditCancel(todo.id);\r\n        }\r\n    }\r\n\r\n    const handleItemDelete = () => {\r\n        destroyItem(item.id)\r\n    }\r\n\r\n    const toggleItem = () => {\r\n        !item.isEditing && checkItem(item.id)\r\n    }\r\n\r\n    const editItem = () => toggleEditProp(item.id)\r\n\r\n    return (\r\n        <li className=\"todo-item\">\r\n            <input id={\"labelDone3\" + item.id}\r\n                   type=\"checkbox\"\r\n                   className=\"input-for-todo-list\"\r\n                   checked={item.isEditing ? false : item.isCompleted}\r\n            />\r\n            <label htmlFor={\"labelDone3\" + item.id}\r\n                   className=\"label-for-todo-list\"\r\n                   onClick={toggleItem}\r\n            />\r\n            {item.isEditing ? (\r\n                <input\r\n                    key={\"input-edit\"}\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    className=\"taskArea\"\r\n                    onKeyDown={handleKeyDown}\r\n                    value={inputValue}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setInputValue(e.target.value)\r\n                    }}\r\n                    // onBlur={handleBlur}\r\n                />\r\n            ) : (\r\n                <>\r\n\r\n                    <p onDoubleClick={editItem}>\r\n                        {item.value}\r\n                    </p>\r\n                    <button type=\"button\" className=\"deleteTaskButton\" onClick={handleItemDelete}>\r\n                        Ã—\r\n                    </button>\r\n                </>\r\n\r\n            )}\r\n        </li>\r\n    )\r\n}\r\n\r\n// const FILTER_NAMES = {\r\n//     all: \"all\",\r\n//     completed: \"completed\",\r\n// }\r\n//\r\n// const FILTERS = {\r\n//     [FILTER_NAMES.all]: {\r\n//         label: \"All\",\r\n//         filterFunk: () => true,\r\n//     },\r\n//     [FILTER_NAMES.completed]: {\r\n//         label: \"Completed\",\r\n//         filterFunk: (todo) => todo.isCompleted,\r\n//     },\r\n//     [FILTER_NAMES.saga]: {\r\n//         label: \"Completed\",\r\n//         filterFunk: (todo) => todo.task === \"saga\",\r\n//     }\r\n// }\r\n// Object.values(FILTERS).map(filter => (\r\n//     <button onClick={() => setFilter(filter)}>\r\n//         {filter.label}\r\n//     </button>\r\n// ))\r\nconst AllItems = ({itemList, destroyItem, checkItem, filter, toggleEditProp, changeItem}: IAllItemsProps) => {\r\n    console.log(itemList, itemList\r\n        .filter(item => filter === null || item.isCompleted === filter))\r\n    return (\r\n        <ul className='all_todos'>\r\n            {itemList\r\n                .filter(item => filter === null || item.isCompleted === filter)\r\n                .map(item => (\r\n                    <ItemElement\r\n                        key={item.id}\r\n                        item={item}\r\n                        destroyItem={destroyItem}\r\n                        checkItem={checkItem}\r\n                        toggleEditProp={toggleEditProp}\r\n                        changeItem={changeItem}\r\n                    />\r\n                ))}\r\n        </ul>\r\n    );\r\n};\r\nexport default AllItems\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}