{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RipSar\\\\WebstormProjects\\\\todo\\\\src\\\\components\\\\InputToDo\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './styles.scss';\n\n// @ts-ignore\n\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputToDo(_ref) {\n  _s();\n  let {\n    name\n  } = _ref;\n  const dispatch = useDispatch();\n  const inputValue = useSelector(state => state.inputValue);\n  const todos = useSelector(state => state.todos);\n\n  // const handleTodoCreate = (text: string) => {\n  //     if (text.trim() === \"\") return;\n  //     const uniqueID = \"id\" + Math.random().toString(16).slice(2);\n  //     const newTodo = {...TODO_TEMPLATE, task: text, id: uniqueID, isChecked: false}\n  //\n  // }\n  const handleInput = e => {\n    if (e.key === \"Enter\") {\n      handleTodoCreate(inputValue);\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"items-toggle-all\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"items-input\",\n      placeholder: name,\n      onKeyDown: handleInput,\n      value: inputValue,\n      onChange: e => {\n        setInputValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(InputToDo, \"PqHWRF3f6nIXNTqhyA+m0jTqPdM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = InputToDo;\nexport default InputToDo;\nvar _c;\n$RefreshReg$(_c, \"InputToDo\");","map":{"version":3,"names":["React","useSelector","useDispatch","jsxDEV","_jsxDEV","InputToDo","_ref","_s","name","dispatch","inputValue","state","todos","handleInput","e","key","handleTodoCreate","setInputValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onKeyDown","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/components/InputToDo/index.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Item} from \"../../state/types\";\r\nimport { ActionType } from \"../../state/actions\";\r\nimport './styles.scss'\r\n\r\n// @ts-ignore\r\n\r\n//\r\n\r\n\r\nimport { TODO_TEMPLATE } from './constants'\r\n\r\ninterface ToDoInputName {\r\n    name: string;\r\n}\r\nfunction InputToDo ({name}: ToDoInputName ) {\r\n    const dispatch = useDispatch();\r\n    const inputValue = useSelector((state: AppState) => state.inputValue);\r\n    const todos = useSelector((state: AppState) => state.todos);\r\n\r\n    // const handleTodoCreate = (text: string) => {\r\n    //     if (text.trim() === \"\") return;\r\n    //     const uniqueID = \"id\" + Math.random().toString(16).slice(2);\r\n    //     const newTodo = {...TODO_TEMPLATE, task: text, id: uniqueID, isChecked: false}\r\n    //\r\n    // }\r\n    const handleInput = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            handleTodoCreate(inputValue)\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='items'>\r\n            <button className='items-toggle-all'>\r\n                <span>\r\n                    â€º\r\n                </span>\r\n            </button>\r\n            <input type='text'\r\n                   className='items-input'\r\n                   placeholder={name}\r\n                   onKeyDown={handleInput}\r\n                   value={inputValue}\r\n                   onChange={(e: React.ChangeEvent<HTMLInputElement>) => {setInputValue(e.target.value)}}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default InputToDo;"],"mappings":";;AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAGtD,OAAO,eAAe;;AAEtB;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,SAASC,SAASA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAxB;IAACC;EAAmB,CAAC,GAAAF,IAAA;EACrC,MAAMG,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,UAAU,GAAGT,WAAW,CAAEU,KAAe,IAAKA,KAAK,CAACD,UAAU,CAAC;EACrE,MAAME,KAAK,GAAGX,WAAW,CAAEU,KAAe,IAAKA,KAAK,CAACC,KAAK,CAAC;;EAE3D;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,WAAW,GAAIC,CAAsC,IAAK;IAC5D,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnBC,gBAAgB,CAACN,UAAU,CAAC;MAC5BO,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;EAED,oBACIb,OAAA;IAAKc,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBf,OAAA;MAAQc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAChCf,OAAA;QAAAe,QAAA,EAAM;MAEN;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACTnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MACXN,SAAS,EAAC,aAAa;MACvBO,WAAW,EAAEjB,IAAK;MAClBkB,SAAS,EAAEb,WAAY;MACvBc,KAAK,EAAEjB,UAAW;MAClBkB,QAAQ,EAAGd,CAAsC,IAAK;QAACG,aAAa,CAACH,CAAC,CAACe,MAAM,CAACF,KAAK,CAAC;MAAA;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAChB,EAAA,CAlCQF,SAAS;EAAA,QACGH,WAAW,EACTD,WAAW,EAChBA,WAAW;AAAA;AAAA6B,EAAA,GAHpBzB,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}