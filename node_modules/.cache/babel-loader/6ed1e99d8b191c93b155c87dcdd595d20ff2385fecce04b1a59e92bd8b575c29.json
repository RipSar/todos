{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  todos: []\n};\nconst todos = createSlice({\n  name: \"todoActions\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      state.todos = [...state.todos, action.payload];\n    },\n    // removeItem: (state, action) => {\n    //     state.todos = [...state.todos.filter((item) => item.id !== action.payload)]\n    // },\n    removeItem: (state, action) => {\n      console.log(action);\n      state.todos = state.todos.filter(item => item.id !== action.payload);\n    },\n    toggleItem: (state, action) => {\n      state.todos = state.todos.map(item => item.id === action.payload ? {\n        ...item,\n        isCompleted: !item.isCompleted\n      } : item);\n    },\n    toggleAllItems: state => {\n      const isAllCompleted = !!state.todos.filter(item => !item.isCompleted).length;\n      state.todos = state.todos.map(item => ({\n        ...item,\n        isCompleted: isAllCompleted\n      }));\n    },\n    toggleEditItem: (state, action) => {\n      state.todos = state.todos.map(item => item.id === action.payload ? {\n        ...item,\n        isEditing: !item.isEditing\n      } : item);\n    },\n    setItemValue: (state, action) => {\n      state.todos = state.todos.map(item => item.id === action.payload.id ? {\n        ...item,\n        value: action.payload.value\n      } : item);\n    }\n  }\n});\nconst {\n  reducer\n} = todos;\nexport const {\n  addItem,\n  removeItem,\n  toggleItem,\n  toggleAllItems,\n  toggleEditItem,\n  setItemValue\n} = todos.actions;\nexport default reducer;","map":{"version":3,"names":["createSlice","initialState","todos","name","reducers","addItem","state","action","payload","removeItem","console","log","filter","item","id","toggleItem","map","isCompleted","toggleAllItems","isAllCompleted","length","toggleEditItem","isEditing","setItemValue","value","reducer","actions"],"sources":["C:/Users/RipSar/WebstormProjects/todo/src/slices/counterSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface Item {\r\n    value: string;\r\n    id: string;\r\n    isCompleted: boolean;\r\n    isEditing: boolean;\r\n}\r\n\r\nconst initialState: { todos: Item[] } = {\r\n    todos: [],\r\n}\r\n\r\n\r\nconst todos = createSlice({\r\n    name: \"todoActions\",\r\n    initialState,\r\n    reducers: {\r\n        addItem: (state, action) => {\r\n            state.todos = [...state.todos, action.payload]\r\n        },\r\n        // removeItem: (state, action) => {\r\n        //     state.todos = [...state.todos.filter((item) => item.id !== action.payload)]\r\n        // },\r\n        removeItem: (state, action) => {\r\n            console.log(action)\r\n            state.todos = state.todos.filter((item) => item.id !== action.payload);\r\n        },\r\n        toggleItem: (state, action) => {\r\n            state.todos = state.todos.map((item) =>\r\n                item.id === action.payload ? { ...item, isCompleted: !item.isCompleted } : item\r\n            );\r\n        },\r\n        toggleAllItems: (state) => {\r\n            const isAllCompleted = !!(state.todos.filter((item) => !item.isCompleted)).length;\r\n            state.todos = state.todos.map(item => ({...item, isCompleted: isAllCompleted}))\r\n        },\r\n        toggleEditItem: (state, action) => {\r\n            state.todos = state.todos.map((item) =>\r\n                item.id === action.payload ? { ...item, isEditing: !item.isEditing } : item\r\n            );\r\n        },\r\n        setItemValue: (state, action) => {\r\n            state.todos = state.todos.map((item) =>\r\n                item.id === action.payload.id ? { ...item, value: action.payload.value } : item\r\n            );\r\n        }\r\n    },\r\n\r\n});\r\n\r\nconst { reducer } = todos;\r\n\r\nexport const { addItem, removeItem, toggleItem, toggleAllItems, toggleEditItem , setItemValue} = todos.actions\r\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAS9C,MAAMC,YAA+B,GAAG;EACpCC,KAAK,EAAE;AACX,CAAC;AAGD,MAAMA,KAAK,GAAGF,WAAW,CAAC;EACtBG,IAAI,EAAE,aAAa;EACnBF,YAAY;EACZG,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACJ,KAAK,GAAG,CAAC,GAAGI,KAAK,CAACJ,KAAK,EAAEK,MAAM,CAACC,OAAO,CAAC;IAClD,CAAC;IACD;IACA;IACA;IACAC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3BG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;MACnBD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAAC;IAC1E,CAAC;IACDO,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACc,GAAG,CAAEH,IAAI,IAC/BA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,GAAG;QAAE,GAAGK,IAAI;QAAEI,WAAW,EAAE,CAACJ,IAAI,CAACI;MAAY,CAAC,GAAGJ,IAC/E,CAAC;IACL,CAAC;IACDK,cAAc,EAAGZ,KAAK,IAAK;MACvB,MAAMa,cAAc,GAAG,CAAC,CAAEb,KAAK,CAACJ,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACI,WAAW,CAAC,CAAEG,MAAM;MACjFd,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACc,GAAG,CAACH,IAAI,KAAK;QAAC,GAAGA,IAAI;QAAEI,WAAW,EAAEE;MAAc,CAAC,CAAC,CAAC;IACnF,CAAC;IACDE,cAAc,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACc,GAAG,CAAEH,IAAI,IAC/BA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,GAAG;QAAE,GAAGK,IAAI;QAAES,SAAS,EAAE,CAACT,IAAI,CAACS;MAAU,CAAC,GAAGT,IAC3E,CAAC;IACL,CAAC;IACDU,YAAY,EAAEA,CAACjB,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACc,GAAG,CAAEH,IAAI,IAC/BA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,GAAG;QAAE,GAAGD,IAAI;QAAEW,KAAK,EAAEjB,MAAM,CAACC,OAAO,CAACgB;MAAM,CAAC,GAAGX,IAC/E,CAAC;IACL;EACJ;AAEJ,CAAC,CAAC;AAEF,MAAM;EAAEY;AAAQ,CAAC,GAAGvB,KAAK;AAEzB,OAAO,MAAM;EAAEG,OAAO;EAAEI,UAAU;EAAEM,UAAU;EAAEG,cAAc;EAAEG,cAAc;EAAGE;AAAY,CAAC,GAAGrB,KAAK,CAACwB,OAAO;AAC9G,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}